name: 'Test, Build and Deploy'
on: [push]

permissions:
  contents: write

jobs:
  test-lint-gen-docs:
    name: Flake8, MyPy, Pytest, GH Pages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: |
        pip install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    - name: Install dependencies
      run: |
        poetry install --with dev,test,docs
    - name: flake8
      run: |
        poetry run flake8 mdtc
    - name: mypy
      run: |
        poetry run mypy -p mdtc
    - name: pytest
      run: |
        poetry run pytest -vvv tests
    - name: Publish GH pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        poetry run mkdocs gh-deploy --force

  # TODO: Future section for autodoc and push to PYPI..
  build-and-deploy-to-pypi:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Build and deploy to PYPI
    runs-on: ubuntu-latest
    needs: test-lint-gen-docs

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: |
        pip install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    - name: Install dependencies
      run: |
        poetry install --only-root
    - name: Publish to Test PyPI
      run: |
        poetry config repositories.test-pypi https://test.pypi.org/legacy/
        poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_TOKEN }}
        poetry publish --build -r test-pypi